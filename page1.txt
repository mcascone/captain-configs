### Page 1
[PAGE]
# Change the "NAME" below in uppercase letters <= 4 characters
# This page is configured specifically to emulate the behavior of the 
#   Boomerang+ Phrase Sampler. The old-school one, not the III.
page_name = [BOOM]

# This section sets the global items within a page

exp1_CH = [2]
exp1_CC = [11]

exp2_CH = [2]
exp2_CC = [12]

encoder_CC = [13]
encoder_NAME = [Wheel]

# on / off
midithrough = [off]

# 123 / abc3 / abc4 / abc5 / abc8 --Only this 5 options
# Setting 123 is to display the PC as a numerical value
# abc3 means PC display as 1A,1B,1C,2A... abc5 means 1A,1B,1C,1D,1E,2A...
display_number_ABC = [abc3]

# 3 / 4 / 5 / 8 define how many patches in one group or bank
# This is used when display_number_ABC is selected as '123'
group_number = [3]

# 0 / 1 
# set to 1 so that the displayed PC number starting from 1 (Actual PC still 0 )
# set to 0 so that the displayed PC number starting from 0
display_pc_offset = [1]

# 0 / 1 
# set to 0 so that when abcX display selected above, bank is start from 0A,0B,0C...
# set to 1 so that when abcX display selected above, bank is start from 1A,1B,1C...
display_bank_offset = [1]

### SWITCH 1 ###
### THRU MUTE ###
### This is a toggle switch.
[key0]
keytimes = [2]
ledmode = [normal]
ledcolor1 = [0xaa0000][0xaa0000][0xaa0000]
short_up1 = [2][CC][1][127]

ledcolor2 = [0x000000][0x000000][0x000000]
short_up2 = [2][CC][1][0]

### SWITCH 2 ###
### UNUSED AT THIS TIME ###
[key1]
keytimes = [2]
ledmode = [normal]
ledcolor1 = [0xaaaa00][0xaaaa00][0xaaaa00]
short_dw1 = [2][CC][2][127]

ledcolor2 = [0x000000][0x000000][0x000000]
short_dw2 = [2][CC][2][0]

### SWITCH 3 ###
### UNUSED AT THIS TIME ###
[key2]
keytimes = [1]
ledmode = [normal]
ledcolor1 = [0x000000][0x000000][0x000000]
short_dw1 = [2][CC][3][2]


### SWITCH 4 ###
### UNUSED AT THIS TIME ###
[key3]
keytimes = [2]
ledmode = [normal]
ledcolor1 = [0x0000ff][0x0000ff][0x0000ff]
short_dw1 = [2][CC][4][127]

ledcolor2 = [0x000066][0x000066][0x000066]
short_dw2 = [2][CC][4][0]


### SWITCH ^ ###
### BYPASS   ###
### Reversed values because on=bypass
[key4]
keytimes = [2]
ledmode = [normal]
ledcolor1 = [0xffffff][0xffffff][0xffffff]
short_dw1 = [2][CC][5][0]

ledcolor2 = [0x000000][0x000000][0x000000]
short_dw2 = [2][CC][5][127]


### SWITCH A ###
### RECORD   ###
[key5]
keytimes = [2]
ledmode = [normal]

ledcolor1 = [0x00ffff][0x00ffff][0x00ffff]
short_up1 = [2][CC][6][127]

ledcolor2 = [0x000000][0x000000][0x000000]
short_up2 = [2][CC][6][0]


### SWITCH B ###
### PLAY (STOP) ###
[key6]
keytimes = [2]
ledmode = [normal]
ledcolor1 = [0x00ffff][0x00ffff][0x00ffff]
short_up1 = [2][CC][7][127]

ledcolor2 = [0x00000][0x00000][0x00000]
short_up2 = [2][CC][7][0]


### SWITCH C ###
### ONCE ###
### ONCE behaves differently depending on the state of the unit.
### So i am leaving it as a simple toggle and let the plugin sw manage state.
[key7]
keytimes = [2]
ledmode = [normal]
ledcolor1 = [0x00ffff][0x00ffff][0x00ffff]
short_up1 = [2][CC][8][127]

ledcolor2 = [0x000000][0x000000][0x000000]
short_up2 = [2][CC][8][0]


### SWITCH D ###
### STACK (SPEED) ###
### Stack is a momentary-style record switch,
###   that also acts as a toggle for a different feature - 1/2 SPEED -
###   that only activates when the unit is *not* playing.
### The MIDICaptain doesn't have a way to understand the STATE of the unit.
### And, the midi doesn't need to know what the physical switch is doing behind the scenes. 
### The plugin has inputs for each switch.
### So all the midi needs to do is send the correct CC to the correct input.
### The plugin should take care of the rest.
### In code-speak this also serves to decouple the midi config from the plugin code.
### I am only sending a toggle here. But in this button's case, it's implemented for
###   both long and short presses. So it emulated a momentary switch.
### And in the plugin, it's still really just a toggle. Don't overcomplicate it.
[key8]
keytimes = [1]
ledmode = [normal]
ledcolor1 = [0xffffff][0xffffff][0xffffff]
short_dw1 = [2][CC][9][127]
short_up1 = [2][CC][9][0]
long_up1  = [2][CC][9][0]  

### SWITCH V ###
### DIRECTION ###
### 
### The manual advises against using long presses on the two right-most switches,
###   because they're used for the pedal's BANK up/down commands.
### I don't think Super Mode lets you change that assignment,
### So for the immediate future, I'm swapping the positions of the two right-most switches (Direction and Stack)
[key9]
keytimes = [2]
ledmode = [normal]
ledcolor1 = [0xff0000][0xff0000][0xff0000]
short_dw1 = [2][CC][10][127]

ledcolor2 = [0x000000][0x000000][0x000000]
short_dw2 = [2][CC][10][0]